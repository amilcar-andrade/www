Laboratorio 2: Introducción a MySQL.
=================================================
Amilcar Andrade García (1163951) <A01163951@itesm.mx>

Este reporte de laboratorio fue elaborado para el curso de _Desarrollo de aplicaciones distribuidas_ en el Tecnológico de Monterrey, Campus Estado de México.  


*Introducción*

El objetivo del laboratiro fue, instalar, configurar y administrar de manera básica el servidor de base de datos MySQL en un " based unix system ".Por otro lado, se realízó un script para línea de comando (no CGI), llamado datos_superheroes.py, que cumple con las siguientes funciones, crea una tabla llamada superheroes con tres columnas:( Nombre de superhéroe, Identidad secreta, Sexo) Por último, se realizó un script CGI en Python que acceda a la información contenida en la base de datos de MySQL.

En este reporte se cumplirá con todos los objetivos establecidos, a continuación se mostrará la forma en que se realizó la práctica.

*Planteamiento del problema y solución*

Para poder instalar y configurar el servidor de base de datos MySQL, se uso la información proporcionada por el siguiente sitio web.

************************************************************************
http://wiffu.com/getting-mysqldb-for-python-working-on-snow-leopard
************************************************************************

Para poder crear la base de datos "prueba", se acceso al modo root y se ejecutaron los siguientes comandos en la terminal.

---------------------------------------------------------
mysqld

mysql -u root

create database prueba;
---------------------------------------------------------


Para poder realizar los scripts "datos_superheroes.py" y "super.py" se necesitó importar el driver MySQLdb.

A continuación se muestra como se importa el driver de Mysql para Python.
---------------------------------------------------------
import MySQLdb
---------------------------------------------------------

Para poder resolver el problema, esté se dividió en dos partes, a continuación se mostrará cada parte del problema con una pequeña descripcicón.

El código que está a continuación se usó para conectarse a la base de datos prueba. Por otro lado, se escribió una instrucción que verificaba si ya estba creada la tabla superhéroes y en caso que estuviera se borraba la tabla, esto para no duplicar datos. En caso contrario, se creaba la tabla con los tres campos requeridos. Por último, se agregaron los datos necesarios y se cerró la conexión con la base de datos.



.Datos_superheroes.py


[source,python]
---------------------------------------------------------
import MySQLdb
# connect to the MySQL server
conn = MySQLdb.connect (host = "localhost", user = "root", db = "prueba")

cursor = conn.cursor ()
cursor.execute ("DROP TABLE IF EXISTS superheroes")
cursor.execute ("""
      CREATE TABLE superheroes
      (
        nombre     CHAR(40),
        identidad CHAR(40),
        sexo CHAR(40)

      )
    """)

cursor.execute ("""
      INSERT INTO superheroes (nombre,identidad, sexo)
      VALUES
        ('Superman', 'Clark Kent', 'Masculino'),
	        ...
	     """)

cursor.close ()
conn.commit ()
conn.close ()


---------------------------------------------------------

Para poder ejecutar el script se abrio una terminal y se escribió lo siguiente.
---------------------------------------------------------
cd www

python datos_superheroes.py
---------------------------------------------------------


El siguiente codigó es el del script super.py, primero se tuvo que hacer la conexión con la base de datos para accesar a la tabla superhéroes. Después se generó el encabezado html con el metodó print, el encabezado se generó de la misma manera que la práctica anterior (Introducción al servidor web Apache). Por otro lado, se usaron los siguientes métodos, el metodó fetchall perteneciente al driver MysqlDb, el metodó iterador for y el metodó print pertenecientes a python, estos métodos se usaron para poder ir accesando a la información, ir recorriendo la tabla e ir impriendo el valor de cada celda de la tabla superhéroes. Por otra parte, al momento de realizar el query a la tabla superheroes se cumplió con lo siguiente, la información debe aparecer primero en orden de sexo (femenino primero, masculino después) y luego por orden ascendente de identidad secreta. Por último, se usó de nuevo el método print para cerrar el cuerpo de la tabla y del html, asimismo se cerraron las conexiones con la base de datos.


.Super.py


[source,python]
---------------------------------------
#!/usr/bin/env python
# coding: utf-8

import MySQLdb

# connect to the MySQL server
conn = MySQLdb.connect (host = "localhost",user = "root", db = "prueba")

.
.
.

# perform a fetch loop using fetchall()
cursor = conn.cursor ()
cursor.execute ("SELECT * FROM superheroes ORDER BY sexo, identidad ASC")
rows = cursor.fetchall ()
for row in rows:
  print '<tr>'
	print '<td>' + row[0] + '</td>' + '<td>' + row[1] + '</td>' + '<td>' + row[2] + '</td>'	
	print '</tr>'

	
print '''


		        </tbody>
		      </table>

        </div>
      </div>        
    </body>

</html>'''

cursor.close ()
conn.commit ()
conn.close ()


---------------------------------------

*Pruebas*

Para realizar las pruebas se les dio permisos a los dos scripts de la siguiente manera.
---------------------------------------

chmod +x datos_superheroes.py

chmod +x super.py

---------------------------------------

Las pruebas se realizaron usando la terminal y un browser. Primero se usó la terminal para poder verificar si la tabla se habia creado y luego se uso el browser para mostrar la información de la tabla en una formato de texto html. A continuación se muestra la evidencia.

.Tabla superheroes
image:images/2.png[
"DB",width=250,
link="images/2.png"]

.Tabla en Browser
image:images/1.png[
"Browser",width=250,
link="images/1.png"]


*Conclusión*

Se pudo cumplir con todos los objetivos de la práctica de laboratorio. Por otro lado, la sección más interesante fue el desarrollo de los dos scripts usando el lenguaje de programación Python y el driver MysqlDb. Por ultimo, se tuvo que consultar de la documentación de Python para poder encontrar los métodos necesarios para la realización del script.    


*Agradecimientos*

Profesor Ariel O. por proporcionarnos información vital de la configuración y programación.


*Referencias*

[bibliography]

- Python Documentation http://www.python.org/doc/.

- http://wiffu.com/getting-mysqldb-for-python-working-on-snow-leopard

- [[[Hoffmann]]] Chris Hoffmann, et al. _Python 2.7 Quick Reference_ http://rgruet.free.fr/PQR27/PQR2.7.html 
